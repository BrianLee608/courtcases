<!doctype html>
<html>
  <head>
    <title>Data Visualization</title>
    <link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script src="https://www.amcharts.com/lib/3/ammap.js"></script>
    <script src="https://www.amcharts.com/lib/3/maps/js/usaLow.js"></script>
    <script src="https://www.amcharts.com/lib/3/plugins/export/export.min.js"></script>
    <link rel="stylesheet" href="https://www.amcharts.com/lib/3/plugins/export/export.css" type="text/css" media="all" />
    <script src="https://www.amcharts.com/lib/3/themes/chalk.js"></script>
  </head>
  <body>
    <style>
      body { background-color: #3f3e3b; color: #fff; }
      #chartdiv {
      width: 100%;
      height: 500px;
      }
    </style>
    <nav class="navbar navbar-default navbar-fixed-top">
      <div class="container">
        <div class="container-fluid">
          <!-- Brand and toggle get grouped for better mobile display -->
          <div class="navbar-header">
            <a class="navbar-brand" href="/">Kruskalities Data Science</a>
          </div>
          <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
              <li><a href="/">Concept Frequency By State<span class="sr-only">(current)</span></a></li>
              <li class="active"><a href="/graph">Connections Between States</a></li>
              <li><a href="https://github.com/erics1989/courtcases">Github Code Repository</a></li>
            </ul>
          </div><!-- /.navbar-collapse -->
        </div><!-- /.container-fluid -->
      </div>
    </nav>
    <div style="margin-top: 60px;" id="chartdiv"></div>

    <script>
      var abvMap = {
        "Alabama": "AL",
        "Alaska": "AK",
        "Arizona": "AZ",
        "Arkansas": "AR",
        "California": "CA",
        "Colorado": "CO",
        "Connecticut": "CT",
        "Delaware": "DE",
        "District of Columbia": "DC",
        "Florida": "FL",
        "Georgia": "GA",
        "Hawaii": "HI",
        "Idaho": "ID",
        "Illinois": "IL",
        "Indiana": "IN",
        "Iowa": "IA",
        "Kansas": "KS",
        "Kentucky": "KY",
        "Louisiana": "LA",
        "Maine": "ME",
        "Maryland": "MD",
        "Massachusetts": "MA",
        "Michigan": "MI",
        "Minnesota": "MN",
        "Mississippi": "MS",
        "Missouri": "MO",
        "Montana": "MT",
        "Nebraska": "NE",
        "Nevada": "NV",
        "New Hampshire": "NH",
        "New Jersey": "NJ",
        "New Mexico": "NM",
        "New York": "NY",
        "North Carolina": "NC",
        "North Dakota": "ND",
        "Ohio": "OH",
        "Oklahoma": "OK",
        "Oregon": "OR",
        "Pennsylvania": "PA",
        "Rhode Island": "RI",
        "South Carolina": "SC",
        "South Dakota": "SD",
        "Tennessee": "TN",
        "Texas": "TX",
        "Utah": "UT",
        "Vermont": "VT",
        "Virginia": "VA",
        "Washington": "WA",
        "West Virginia": "WV",
        "Wisconsin": "WI",
        "Wyoming": "WY",
      }

      var mapEdges = {};

      $.get("/graph/nodes", function(data, status) {
        var nodesData = JSON.parse(data);
        for (var n of nodesData) {
          n = JSON.parse(n);
          mapEdges[abvMap[n.label]] = {
            id: n.id,
            label: n.label,
            links: []
          };
        }

        $.get("/graph/edges", function(data, status) {
          var edgesData = JSON.parse(data);
          for (var e of edgesData) {
            var e = JSON.parse(e);
            var l = mapEdges[e.source]['links'];
            l.push(e.target);
            mapEdges[e.source]['links'] = l;
          }

          amChartInit();
        });


      });


      function amChartInit() {
        var map = AmCharts.makeChart( "chartdiv", {
          "type": "map",
          "theme": "light",

          "dataProvider": {
            "map": "usaLow",
            "getAreasFromMap": true
          },

          "areasSettings": {
            "autoZoom": false
          },

          "linesSettings": {
            "alpha": 0.3,
            "thickness": 3
          },

          "listeners": [ {
            "event": "init",
            "method": function( event ) {
              // gather center coordinates for each state
              var map = event.chart;
              map.myData = {};
              for ( var x in map.dataProvider.areas ) {
                var area = map.dataProvider.areas[ x ];
                map.myData[ area.id ] = {
                  latitude: map.getAreaCenterLatitude( area ),
                  longitude: map.getAreaCenterLongitude( area )
                };
              }

              // add lines to each state
              for ( var x in map.dataProvider.areas ) {
                var area = map.dataProvider.areas[ x ];
                // console.log(area);
                for ( var id in map.myData ) {
                  if ( id == area.id )
                    continue;

                  var idState = id.substring(3);

                  var obj = mapEdges[idState];

                  if (obj.links.includes(area.id.substring(3))) {
                    var line = new AmCharts.MapLine();
                    line.latitudes = [ map.myData[ area.id ].latitude, map.myData[ id ].latitude ];
                    line.longitudes = [ map.myData[ area.id ].longitude, map.myData[ id ].longitude ];
                    area.lines.push( line );
                  }
                  // if (obj.links.includes(area.id.substring(3))) {
                  //   // console.log(obj.links)
                  // }
                  // var line = new AmCharts.MapLine();
                  // line.latitudes = [ map.myData[ area.id ].latitude, map.myData[ id ].latitude ];
                  // line.longitudes = [ map.myData[ area.id ].longitude, map.myData[ id ].longitude ];
                  // area.lines.push( line );
                }
              }
              map.validateData();
            }
          }, {
            "event": "rollOverMapObject",
            "method": function( event ) {
              var map = event.chart;
              var state = event.mapObject.id;
              state = state.substring(3).toLowerCase();

              if ( "MapArea" == event.mapObject.objectType )
                map.clickMapObject( event.mapObject );
            }
          } ]

        } );

      }

  </script>
  </body>
</html>
